{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;AACwE;AAChC;;;;;;;;;;;;;;;;;;ICAtCE,4DAAA,aAA4E;IAEvCA,oDAAA,YAAK;IAAAA,0DAAA,EAAI;IAC1CA,4DAAA,gBAAkL;IAChLA,uDAAA,cAAyC;IAC3CA,0DAAA,EAAS;IACTA,4DAAA,aAAqD;IAGGA,oDAAA,iBAAS;IAAAA,0DAAA,EAAI;IAEjEA,4DAAA,cAAqB;IAC0BA,oDAAA,eAAO;IAAAA,0DAAA,EAAI;IAE1DA,4DAAA,cAAqB;IAC4BA,oDAAA,iBAAS;IAAAA,0DAAA,EAAI;IAE9DA,4DAAA,cAAqB;IACgCA,oDAAA,yBAAY;IAAAA,0DAAA,EAAI;;;IAT/CA,uDAAA,GAA6B;IAA7BA,wDAAA,eAAAA,6DAAA,IAAAQ,GAAA,EAA6B;IAG7BR,uDAAA,GAAwB;IAAxBA,wDAAA,eAAAA,6DAAA,IAAAS,GAAA,EAAwB;IAGxBT,uDAAA,GAA0B;IAA1BA,wDAAA,eAAAA,6DAAA,IAAAU,GAAA,EAA0B;IAG1BV,uDAAA,GAA8B;IAA9BA,wDAAA,eAAAA,6DAAA,IAAAW,GAAA,EAA8B;;;ADXxD,MAAOC,YAAY;EAKvBC,YAAoBC,MAAc,EAAUC,cAA8B;IAAtD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,cAAc,GAAdA,cAAc;IAJ1D,KAAAC,KAAK,GAAG,gBAAgB;IAExB,KAAAC,UAAU,GAAY,IAAI;IAGxB,IAAI,CAACH,MAAM,CAACI,MAAM,CAACC,IAAI,CACrBpB,sDAAM,CAACqB,KAAK,IAAIA,KAAK,YAAYtB,0DAAa,CAAC,CAChD,CAACuB,SAAS,CAAC,MAAK;MACf,MAAMC,YAAY,GAAG,IAAI,CAACC,eAAe,CAAC,IAAI,CAACR,cAAc,CAAC;MAC9D,IAAI,CAACE,UAAU,GAAG,EAAEK,YAAY,KAAK,OAAO,IAAIA,YAAY,KAAK,UAAU,CAAC;IAC9E,CAAC,CAAC;EACJ;EAEQC,eAAeA,CAACC,KAAqB;IAC3C,IAAIA,KAAK,CAACC,UAAU,EAAE;MACpB,OAAO,IAAI,CAACF,eAAe,CAACC,KAAK,CAACC,UAAU,CAAC,CAAC,CAAC;;;IAEjD,OAAOD,KAAK,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,CAAC,EAAEC,IAAI,IAAI,EAAE,CAAC,CAAE;EAC7C;;;;uBAnBWhB,YAAY,EAAAZ,+DAAA,CAAA8B,mDAAA,GAAA9B,+DAAA,CAAA8B,2DAAA;IAAA;EAAA;;;YAAZlB,YAAY;MAAAqB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCTzBvC,4DAAA,aAA6B;UAE3BA,wDAAA,IAAA0C,2BAAA,kBAuBM;UAGN1C,4DAAA,aAA4B;UAC1BA,uDAAA,oBAA+B;UACjCA,0DAAA,EAAM;UAGNA,4DAAA,gBAAyD;UACpDA,oDAAA,wDAAiD;UAAAA,0DAAA,EAAI;;;UAhCpDA,uDAAA,GAAgB;UAAhBA,wDAAA,SAAAwC,GAAA,CAAAvB,UAAA,CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDkC;AACF;AACX,CAAE;AACA;AAEA;AACO;AACM;AACS;AACH;AACT;AACL;AACC;AACmB;;;AA8BlE,MAAOsC,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,SAAA,GAFR5C,wDAAY;IAAA;EAAA;;;iBADb,CAACwC,6DAAU,CAAC;MAAAK,OAAA,GAbrBd,oEAAa,EACbU,gEAAmB,EACnBT,mEAAgB,EAChBC,wDAAW,EACXC,0DAAY,CAACY,OAAO,CAAC,CACnB;QAAE9B,IAAI,EAAE,WAAW;QAAE+B,SAAS,EAAEV,8EAAkBA;MAAA,CAAE,EACpD;QAAErB,IAAI,EAAE,MAAM;QAAE+B,SAAS,EAAEZ,+DAAaA;MAAA,CAAC,EACzC;QAAEnB,IAAI,EAAE,QAAQ;QAAE+B,SAAS,EAAEX,qEAAeA;MAAA,CAAE,EAC9C;QAAEpB,IAAI,EAAE,OAAO;QAAE+B,SAAS,EAAER,kEAAcA;MAAA,CAAE,EAC5C;QAAEvB,IAAI,EAAE,UAAU;QAAE+B,SAAS,EAAET,2EAAiBA;MAAA,CAAE,EAClD;QAAEtB,IAAI,EAAE,EAAE;QAAEgC,UAAU,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAM,CAAE,CACtD,CAAC;IAAA;EAAA;;;sHAKON,SAAS;IAAAO,YAAA,GAzBlBlD,wDAAY,EACZmC,+DAAa,EACbC,qEAAe,EACfC,8EAAkB,EAClBC,2EAAiB,EACjBC,kEAAc,EACdG,iFAAmB;IAAAG,OAAA,GAGnBd,oEAAa,EACbU,gEAAmB,EACnBT,mEAAgB,EAChBC,wDAAW,EAAAf,0DAAA;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;IErBL9B,4DAAA,YAAyG;IACvGA,oDAAA,GACA;IAAAA,4DAAA,UAAK;IACoCA,wDAAA,mBAAAgE,yDAAA;MAAA,MAAAC,WAAA,GAAAjE,2DAAA,CAAAmE,GAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAtE,2DAAA;MAAA,OAASA,yDAAA,CAAAsE,MAAA,CAAAG,YAAA,CAAAL,OAAA,CAAkB;IAAA,EAAC;IAACpE,oDAAA,aAAM;IAAAA,0DAAA,EAAS;IACnFA,4DAAA,iBAAoE;IAA9BA,wDAAA,mBAAA0E,yDAAA;MAAA,MAAAT,WAAA,GAAAjE,2DAAA,CAAAmE,GAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAM,MAAA,GAAA3E,2DAAA;MAAA,OAASA,yDAAA,CAAA2E,MAAA,CAAAC,UAAA,CAAAR,OAAA,CAAAS,EAAA,CAAmB;IAAA,EAAC;IAAC7E,oDAAA,eAAQ;IAAAA,0DAAA,EAAS;;;;IAHvFA,uDAAA,GACA;IADAA,gEAAA,MAAAoE,OAAA,CAAAW,IAAA,SAAAX,OAAA,CAAAY,KAAA,MACA;;;;;;IAiBFhF,4DAAA,YAA6G;IAC3GA,oDAAA,GACA;IAAAA,4DAAA,UAAK;IACoCA,wDAAA,mBAAAiF,0DAAA;MAAA,MAAAhB,WAAA,GAAAjE,2DAAA,CAAAkF,GAAA;MAAA,MAAAC,SAAA,GAAAlB,WAAA,CAAAI,SAAA;MAAA,MAAAe,MAAA,GAAApF,2DAAA;MAAA,OAASA,yDAAA,CAAAoF,MAAA,CAAAC,cAAA,CAAAF,SAAA,CAAsB;IAAA,EAAC;IAACnF,oDAAA,aAAM;IAAAA,0DAAA,EAAS;IACvFA,4DAAA,iBAAwE;IAAlCA,wDAAA,mBAAAsF,0DAAA;MAAA,MAAArB,WAAA,GAAAjE,2DAAA,CAAAkF,GAAA;MAAA,MAAAC,SAAA,GAAAlB,WAAA,CAAAI,SAAA;MAAA,MAAAkB,OAAA,GAAAvF,2DAAA;MAAA,OAASA,yDAAA,CAAAuF,OAAA,CAAAC,YAAA,CAAAL,SAAA,CAAAN,EAAA,CAAuB;IAAA,EAAC;IAAC7E,oDAAA,eAAQ;IAAAA,0DAAA,EAAS;;;;IAH3FA,uDAAA,GACA;IADAA,gEAAA,MAAAmF,SAAA,CAAAJ,IAAA,SAAAI,SAAA,CAAAO,QAAA,SAAAP,SAAA,CAAAQ,MAAA,SAAAR,SAAA,CAAAS,IAAA,CAAAb,IAAA,MACA;;;;;IAWR/E,4DAAA,cAA4E;IAC1EA,oDAAA,iFACF;IAAAA,0DAAA,EAAM;;;ADnCJ,MAAOiD,kBAAkB;EAI7BpC,YAAoBgF,UAAsB,EAAU/E,MAAc;IAA9C,KAAA+E,UAAU,GAAVA,UAAU;IAAsB,KAAA/E,MAAM,GAANA,MAAM;IAH1D,KAAAgF,KAAK,GAAU,EAAE;IACjB,KAAAC,OAAO,GAAU,EAAE;EAEmD;EAEtEC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAD,SAASA,CAAA;IACP,IAAI,CAACJ,UAAU,CAACM,QAAQ,EAAE,CAAC9E,SAAS,CAACyE,KAAK,IAAG;MAC3C,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAI,WAAWA,CAAA;IACT,IAAI,CAACL,UAAU,CAACO,UAAU,EAAE,CAAC/E,SAAS,CAAC0E,OAAO,IAAG;MAC/C,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,CAAC;EACJ;EAEAtB,YAAYA,CAACmB,IAAS;IACpB,IAAI,CAAC9E,MAAM,CAACuF,QAAQ,CAAC,CAAC,OAAO,EAAET,IAAI,CAACf,EAAE,CAAC,CAAC;EAC1C;EAEAyB,cAAcA,CAAA;IACZ,IAAI,CAACxF,MAAM,CAACuF,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EAEAhB,cAAcA,CAACkB,MAAW;IACxB,IAAI,CAACzF,MAAM,CAACuF,QAAQ,CAAC,CAAC,SAAS,EAAEE,MAAM,CAAC1B,EAAE,CAAC,CAAC;EAC9C;EAEA2B,gBAAgBA,CAAA;IACd,IAAI,CAAC1F,MAAM,CAACuF,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;EACnC;EAEAzB,UAAUA,CAACC,EAAU;IACnB,IAAI,CAACgB,UAAU,CAACjB,UAAU,CAACC,EAAE,CAAC,CAACxD,SAAS,CAAC,MAAK;MAC5C,IAAI,CAAC4E,SAAS,EAAE;IAClB,CAAC,CAAC;EACJ;EAEAT,YAAYA,CAACX,EAAU;IACrB,IAAI,CAACgB,UAAU,CAACL,YAAY,CAACX,EAAE,CAAC,CAACxD,SAAS,CAAC,MAAK;MAC9C,IAAI,CAAC6E,WAAW,EAAE;IACpB,CAAC,CAAC;EACJ;;;uBAjDWjD,kBAAkB,EAAAjD,+DAAA,CAAA8B,6DAAA,GAAA9B,+DAAA,CAAAyG,mDAAA;IAAA;EAAA;;;YAAlBxD,kBAAkB;MAAAhB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAqE,4BAAAnE,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT/BvC,4DAAA,aAAuB;UACUA,oDAAA,+BAAwB;UAAAA,0DAAA,EAAK;UAG1DA,4DAAA,aAAuB;UAEfA,oDAAA,0BAAmB;UAAAA,0DAAA,EAAK;UAE9BA,4DAAA,aAAuB;UAEnBA,wDAAA,IAAA2G,gCAAA,gBAMK;UACP3G,0DAAA,EAAK;UACLA,4DAAA,iBAAgE;UAA3BA,wDAAA,mBAAA4G,qDAAA;YAAA,OAASpE,GAAA,CAAA8D,cAAA,EAAgB;UAAA,EAAC;UAACtG,oDAAA,4BAAoB;UAAAA,0DAAA,EAAS;UAKjGA,4DAAA,cAAuB;UAEfA,oDAAA,6BAAqB;UAAAA,0DAAA,EAAK;UAEhCA,4DAAA,cAAuB;UAEnBA,wDAAA,KAAA6G,iCAAA,gBAMK;UACP7G,0DAAA,EAAK;UACLA,4DAAA,iBAAkE;UAA7BA,wDAAA,mBAAA8G,qDAAA;YAAA,OAAStE,GAAA,CAAAgE,gBAAA,EAAkB;UAAA,EAAC;UAACxG,oDAAA,6BAAqB;UAAAA,0DAAA,EAAS;UAKpGA,wDAAA,KAAA+G,kCAAA,iBAEM;UACR/G,0DAAA,EAAM;;;UAnCuBA,uDAAA,GAAQ;UAARA,wDAAA,YAAAwC,GAAA,CAAAsD,KAAA,CAAQ;UAmBN9F,uDAAA,GAAU;UAAVA,wDAAA,YAAAwC,GAAA,CAAAuD,OAAA,CAAU;UAajC/F,uDAAA,GAAsC;UAAtCA,wDAAA,UAAAwC,GAAA,CAAAsD,KAAA,CAAAkB,MAAA,KAAAxE,GAAA,CAAAuD,OAAA,CAAAiB,MAAA,CAAsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEEtChH,4DAAA,cAA0D;IACxDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAkH,MAAA,CAAAC,YAAA,MACF;;;ADrCJ,MAAOhE,cAAc;EAKzBtC,YAAoBgF,UAAsB,EAAU/E,MAAc;IAA9C,KAAA+E,UAAU,GAAVA,UAAU;IAAsB,KAAA/E,MAAM,GAANA,MAAM;IAJ1D,KAAAsG,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAF,YAAY,GAAW,EAAE;EAE4C;EAErEG,OAAOA,CAAA;IACL,IAAI,CAACzB,UAAU,CAAC0B,KAAK,CAAC,IAAI,CAACH,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAAChG,SAAS,CAC1DmG,QAAa,IAAI;MAChB,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,OAAO,EAAE;QAChC;QACA,IAAI,CAAC3G,MAAM,CAACuF,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAE;OACxC,MAAM;QACL,IAAI,CAACc,YAAY,GAAG,sDAAsD;;IAE9E,CAAC,EACAO,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD,IAAI,CAACP,YAAY,GAAG,4EAA4E;IAClG,CAAC,CACF;EACH;EACC;EACAS,kBAAkBA,CAAA;IACjB,IAAI,CAAC9G,MAAM,CAACuF,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;;;uBA1BWlD,cAAc,EAAAnD,+DAAA,CAAA8B,6DAAA,GAAA9B,+DAAA,CAAAyG,mDAAA;IAAA;EAAA;;;YAAdtD,cAAc;MAAAlB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAwF,wBAAAtF,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT3BvC,4DAAA,aAA4B;UAKdA,oDAAA,0BAAc;UAAAA,0DAAA,EAAK;UAEzBA,4DAAA,aAAuB;UACfA,wDAAA,sBAAA8H,iDAAA;YAAA,OAAYtF,GAAA,CAAA8E,OAAA,EAAS;UAAA,EAAC;UAC1BtH,4DAAA,cAAkB;UACyBA,oDAAA,eAAO;UAAAA,0DAAA,EAAQ;UACxDA,4DAAA,iBAOE;UAHAA,wDAAA,2BAAA+H,wDAAAC,MAAA;YAAA,OAAAxF,GAAA,CAAA4E,QAAA,GAAAY,MAAA;UAAA,EAAsB;UAJxBhI,0DAAA,EAOE;UAEJA,4DAAA,cAAkB;UACyBA,oDAAA,uBAAU;UAAAA,0DAAA,EAAQ;UAC3DA,4DAAA,iBAOE;UAHAA,wDAAA,2BAAAiI,wDAAAD,MAAA;YAAA,OAAAxF,GAAA,CAAA6E,QAAA,GAAAW,MAAA;UAAA,EAAsB;UAJxBhI,0DAAA,EAOE;UAEJA,4DAAA,kBAAuF;UACrFA,oDAAA,6BACF;UAAAA,0DAAA,EAAS;UACTA,4DAAA,kBAIC;UADCA,wDAAA,mBAAAkI,iDAAA;YAAA,OAAS1F,GAAA,CAAAoF,kBAAA,EAAoB;UAAA,EAAC;UAE9B5H,oDAAA,qBACF;UAAAA,0DAAA,EAAS;UAIXA,wDAAA,KAAAmI,8BAAA,kBAEM;UACRnI,0DAAA,EAAM;;;;UAhCEA,uDAAA,IAAsB;UAAtBA,wDAAA,YAAAwC,GAAA,CAAA4E,QAAA,CAAsB;UAWtBpH,uDAAA,GAAsB;UAAtBA,wDAAA,YAAAwC,GAAA,CAAA6E,QAAA,CAAsB;UAK0BrH,uDAAA,GAAkC;UAAlCA,wDAAA,cAAAoI,GAAA,CAAAC,IAAA,CAAAC,KAAA,CAAkC;UAalFtI,uDAAA,GAAkB;UAAlBA,wDAAA,SAAAwC,GAAA,CAAA2E,YAAA,CAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IElBpBnH,4DAAA,iBAAqD;IAAAA,oDAAA,GAAe;IAAAA,0DAAA,EAAS;;;;IAA1CA,wDAAA,UAAAuI,OAAA,CAAA1D,EAAA,CAAiB;IAAC7E,uDAAA,GAAe;IAAfA,+DAAA,CAAAuI,OAAA,CAAAxD,IAAA,CAAe;;;;;;IAY1E/E,4DAAA,aAA6G;IAC3GA,oDAAA,GACA;IAAAA,4DAAA,UAAK;IACoCA,wDAAA,mBAAAyI,6DAAA;MAAA,MAAAxE,WAAA,GAAAjE,2DAAA,CAAA0I,GAAA;MAAA,MAAAC,SAAA,GAAA1E,WAAA,CAAAI,SAAA;MAAA,MAAAuE,MAAA,GAAA5I,2DAAA;MAAA,OAASA,yDAAA,CAAA4I,MAAA,CAAAC,UAAA,CAAAF,SAAA,CAAkB;IAAA,EAAC;IAAC3I,oDAAA,aAAM;IAAAA,0DAAA,EAAS;IACnFA,4DAAA,iBAAwE;IAAlCA,wDAAA,mBAAA8I,6DAAA;MAAA,MAAA7E,WAAA,GAAAjE,2DAAA,CAAA0I,GAAA;MAAA,MAAAC,SAAA,GAAA1E,WAAA,CAAAI,SAAA;MAAA,MAAA0E,MAAA,GAAA/I,2DAAA;MAAA,OAASA,yDAAA,CAAA+I,MAAA,CAAAvD,YAAA,CAAAmD,SAAA,CAAA9D,EAAA,CAAuB;IAAA,EAAC;IAAC7E,oDAAA,eAAQ;IAAAA,0DAAA,EAAS;;;;IAH3FA,uDAAA,GACA;IADAA,gEAAA,MAAA2I,SAAA,CAAA5D,IAAA,SAAA4D,SAAA,CAAAjD,QAAA,SAAAiD,SAAA,CAAAhD,MAAA,SAAAgD,SAAA,CAAA/C,IAAA,CAAAb,IAAA,MACA;;;;;IALN/E,4DAAA,UAAgC;IAC1BA,oDAAA,4BAAqB;IAAAA,0DAAA,EAAK;IAC9BA,4DAAA,aAAuB;IACrBA,wDAAA,IAAAgJ,oCAAA,iBAMK;IACPhJ,0DAAA,EAAK;;;;IAPoBA,uDAAA,GAAU;IAAVA,wDAAA,YAAAiJ,MAAA,CAAAlD,OAAA,CAAU;;;;;IAUrC/F,4DAAA,cAAgE;IAC9DA,oDAAA,sCACF;IAAAA,0DAAA,EAAM;;;AD1CJ,MAAOgD,eAAe;EAM1BnC,YAAoBgF,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAL9B,KAAAE,OAAO,GAAU,EAAE;IACnB,KAAAD,KAAK,GAAU,EAAE;IACjB,KAAAoD,SAAS,GAAQ,EAAE;IACnB,KAAAC,cAAc,GAAQ,IAAI;EAEoB;EAE9CnD,QAAQA,CAAA;IACN,IAAI,CAACE,WAAW,EAAE;IAClB,IAAI,CAACD,SAAS,EAAE;EAClB;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACL,UAAU,CAACO,UAAU,EAAE,CAAC/E,SAAS,CAAC0E,OAAO,IAAG;MAC/C,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,CAAC;EACJ;EAEAE,SAASA,CAAA;IACP,IAAI,CAACJ,UAAU,CAACM,QAAQ,EAAE,CAAC9E,SAAS,CAACyE,KAAK,IAAG;MAC3C,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAsD,QAAQA,CAAA;IACN,IAAI,IAAI,CAACD,cAAc,EAAE;MACvB,IAAI,CAACtD,UAAU,CAACwD,YAAY,CAAC,IAAI,CAACF,cAAc,CAACtE,EAAE,EAAE,IAAI,CAACqE,SAAS,CAAC,CAAC7H,SAAS,CAAC,MAAK;QAClF,IAAI,CAAC6E,WAAW,EAAE;QAClB,IAAI,CAACoD,SAAS,EAAE;MAClB,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACzD,UAAU,CAAC0D,YAAY,CAAC,IAAI,CAACL,SAAS,CAAC,CAAC7H,SAAS,CAAC,MAAK;QAC1D,IAAI,CAAC6E,WAAW,EAAE;QAClB,IAAI,CAACoD,SAAS,EAAE;MAClB,CAAC,CAAC;;EAEN;EAEAT,UAAUA,CAACtC,MAAW;IACpB,IAAI,CAAC4C,cAAc,GAAG5C,MAAM;IAC5B,IAAI,CAAC2C,SAAS,GAAG;MAAE,GAAG3C;IAAM,CAAE;EAChC;EAEAf,YAAYA,CAACX,EAAU;IACrB,IAAI,CAACgB,UAAU,CAACL,YAAY,CAACX,EAAE,CAAC,CAACxD,SAAS,CAAC,MAAK;MAC9C,IAAI,CAAC6E,WAAW,EAAE;IACpB,CAAC,CAAC;EACJ;EAEAoD,SAASA,CAAA;IACP,IAAI,CAACJ,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,cAAc,GAAG,IAAI;EAC5B;;;uBArDWnG,eAAe,EAAAhD,+DAAA,CAAA8B,6DAAA;IAAA;EAAA;;;YAAfkB,eAAe;MAAAf,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAmH,yBAAAjH,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCR5BvC,4DAAA,aAAuB;UACUA,oDAAA,gCAAoB;UAAAA,0DAAA,EAAK;UACtDA,4DAAA,aAAuB;UAEfA,oDAAA,+BAAwB;UAAAA,0DAAA,EAAK;UAEnCA,4DAAA,aAAuB;UACfA,wDAAA,sBAAAyJ,kDAAA;YAAA,OAAYjH,GAAA,CAAA4G,QAAA,EAAU;UAAA,EAAC;UAC3BpJ,4DAAA,cAAkB;UAC2BA,oDAAA,0BAAkB;UAAAA,0DAAA,EAAQ;UACrEA,4DAAA,gBAA0G;UAAlDA,wDAAA,2BAAA0J,yDAAA1B,MAAA;YAAA,OAAAxF,GAAA,CAAA0G,SAAA,CAAAnE,IAAA,GAAAiD,MAAA;UAAA,EAA4B;UAApFhI,0DAAA,EAA0G;UAG5GA,4DAAA,cAAkB;UACyBA,oDAAA,qBAAQ;UAAAA,0DAAA,EAAQ;UACzDA,4DAAA,iBAAgH;UAA1DA,wDAAA,2BAAA2J,yDAAA3B,MAAA;YAAA,OAAAxF,GAAA,CAAA0G,SAAA,CAAAxD,QAAA,GAAAsC,MAAA;UAAA,EAAgC;UAAtFhI,0DAAA,EAAgH;UAGlHA,4DAAA,cAAkB;UACuBA,oDAAA,cAAM;UAAAA,0DAAA,EAAQ;UACrDA,4DAAA,iBAA0G;UAAtDA,wDAAA,2BAAA4J,yDAAA5B,MAAA;YAAA,OAAAxF,GAAA,CAAA0G,SAAA,CAAAvD,MAAA,GAAAqC,MAAA;UAAA,EAA8B;UAAlFhI,0DAAA,EAA0G;UAG5GA,4DAAA,cAAkB;UACqBA,oDAAA,cAAM;UAAAA,0DAAA,EAAQ;UACnDA,4DAAA,kBAA+F;UAAxDA,wDAAA,2BAAA6J,0DAAA7B,MAAA;YAAA,OAAAxF,GAAA,CAAA0G,SAAA,CAAAY,OAAA,GAAA9B,MAAA;UAAA,EAA+B;UACpEhI,wDAAA,KAAA+J,kCAAA,qBAA6E;UAC/E/J,0DAAA,EAAS;UAGXA,4DAAA,kBAAkF;UAAAA,oDAAA,eAAO;UAAAA,0DAAA,EAAS;UAKxGA,wDAAA,KAAAgK,+BAAA,kBAWM;UAENhK,wDAAA,KAAAiK,+BAAA,kBAEM;UACRjK,0DAAA,EAAM;;;;UAzC4DA,uDAAA,IAA4B;UAA5BA,wDAAA,YAAAwC,GAAA,CAAA0G,SAAA,CAAAnE,IAAA,CAA4B;UAK9B/E,uDAAA,GAAgC;UAAhCA,wDAAA,YAAAwC,GAAA,CAAA0G,SAAA,CAAAxD,QAAA,CAAgC;UAKlC1F,uDAAA,GAA8B;UAA9BA,wDAAA,YAAAwC,GAAA,CAAA0G,SAAA,CAAAvD,MAAA,CAA8B;UAK3C3F,uDAAA,GAA+B;UAA/BA,wDAAA,YAAAwC,GAAA,CAAA0G,SAAA,CAAAY,OAAA,CAA+B;UAC3C9J,uDAAA,GAAQ;UAARA,wDAAA,YAAAwC,GAAA,CAAAsD,KAAA,CAAQ;UAIS9F,uDAAA,GAAmC;UAAnCA,wDAAA,cAAAoI,GAAA,CAAAC,IAAA,CAAAC,KAAA,CAAmC;UAKjFtI,uDAAA,GAAwB;UAAxBA,wDAAA,SAAAwC,GAAA,CAAAuD,OAAA,CAAAiB,MAAA,KAAwB;UAaxBhH,uDAAA,GAA0B;UAA1BA,wDAAA,SAAAwC,GAAA,CAAAuD,OAAA,CAAAiB,MAAA,OAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CgC;;;;;;;;ICQhEhH,4DAAA,cAAqH;IACnHA,oDAAA,6CACF;IAAAA,0DAAA,EAAM;;;;;IAYNA,4DAAA,cAAqH;IACnHA,oDAAA,2CACF;IAAAA,0DAAA,EAAM;;;;;IAYJA,4DAAA,iBAAqD;IAAAA,oDAAA,GAAe;IAAAA,0DAAA,EAAS;;;;IAA1CA,wDAAA,UAAAmK,OAAA,CAAAtF,EAAA,CAAiB;IAAC7E,uDAAA,GAAe;IAAfA,+DAAA,CAAAmK,OAAA,CAAApF,IAAA,CAAe;;;;;IAEtE/E,4DAAA,cAA6G;IAC3GA,oDAAA,kCACF;IAAAA,0DAAA,EAAM;;;ADhCJ,MAAOkD,iBAAiB;EAI5BrC,YAAoBuJ,EAAe,EAAUvE,UAAsB,EAAW/E,MAAc;IAAxE,KAAAsJ,EAAE,GAAFA,EAAE;IAAuB,KAAAvE,UAAU,GAAVA,UAAU;IAAuB,KAAA/E,MAAM,GAANA,MAAM;IAFpF,KAAAuJ,KAAK,GAAU,EAAE;EAE8E;EAE/FrE,QAAQA,CAAA;IACN,IAAI,CAACsE,YAAY,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAChClD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC6C,sDAAU,CAACM,QAAQ,CAAC,CAAC;MACrCpD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC8C,sDAAU,CAACM,QAAQ,CAAC,CAAC;MACrCC,IAAI,EAAE,CAAC,EAAE,EAAE,CAACP,sDAAU,CAACM,QAAQ,CAAC,CAAC,CAAE;KACpC,CAAC;;IAEF,IAAI,CAACE,QAAQ,EAAE,CAAC,CAAE;EACpB;;EAEAA,QAAQA,CAAA;IACN,IAAI,CAAC7E,UAAU,CAAC6E,QAAQ,EAAE,CAACrJ,SAAS,CACjCsJ,IAAI,IAAI;MACPhD,OAAO,CAACiD,GAAG,CAAC,kBAAkB,EAAED,IAAI,CAAC;MACrC,IAAI,CAACN,KAAK,GAAGM,IAAI,CAAC,CAAE;IACtB,CAAC,EACAjD,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACF;EACH;EAEAmD,YAAYA,CAACzJ,KAAU;IACrB,MAAM0J,cAAc,GAAG1J,KAAK,CAAC2J,MAAM,CAACC,KAAK;IACzC,MAAMC,YAAY,GAAG,IAAI,CAACZ,KAAK,CAACa,IAAI,CAACT,IAAI,IAAIA,IAAI,CAAC5F,EAAE,IAAIiG,cAAc,CAAC;IAEvE;IACA,IAAIG,YAAY,EAAE;MAChB,IAAI,CAACX,YAAY,CAACa,UAAU,CAAC;QAC3BC,OAAO,EAAEH,YAAY,CAACpG,EAAE;QACxBwG,SAAS,EAAEJ,YAAY,CAAClG,IAAI,CAAE;OAC/B,CAAC;;EAEN;;EAGAqE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACkB,YAAY,CAAChC,KAAK,EAAE;MAC3B,MAAMgD,IAAI,GAAG,IAAI,CAAChB,YAAY,CAACU,KAAK;MACpCrD,OAAO,CAACiD,GAAG,CAAC,yCAAyC,EAAEU,IAAI,CAAC;MAG5D,IAAI,CAACzF,UAAU,CAAC0F,YAAY,CAACD,IAAI,CAAC,CAACjK,SAAS,CACzCmG,QAAQ,IAAI;QACXG,OAAO,CAACiD,GAAG,CAAC,mBAAmB,EAAEpD,QAAQ,CAAC;QAC1C;QACA,IAAI,CAAC1G,MAAM,CAACuF,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAClC,CAAC,EACAqB,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD,CAAC,CACF;KACF,MAAM;MACLC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAC;;EAExC;;;uBA7DWxE,iBAAiB,EAAAlD,+DAAA,CAAA8B,uDAAA,GAAA9B,+DAAA,CAAAyG,6DAAA,GAAAzG,+DAAA,CAAAyL,mDAAA;IAAA;EAAA;;;YAAjBvI,iBAAiB;MAAAjB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAqJ,2BAAAnJ,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT9BvC,4DAAA,cAAyD;UAAxBA,wDAAA,sBAAA2L,oDAAA;YAAA,OAAYnJ,GAAA,CAAA4G,QAAA,EAAU;UAAA,EAAC;UACtDpJ,4DAAA,aAAwB;UACAA,oDAAA,gBAAS;UAAAA,0DAAA,EAAQ;UACvCA,uDAAA,eAKE;UACFA,wDAAA,IAAA4L,gCAAA,iBAEM;UACR5L,0DAAA,EAAM;UAENA,4DAAA,aAAwB;UACAA,oDAAA,gBAAS;UAAAA,0DAAA,EAAQ;UACvCA,uDAAA,eAME;UACFA,wDAAA,KAAA6L,iCAAA,iBAEM;UACR7L,0DAAA,EAAM;UAENA,4DAAA,cAAwB;UACJA,oDAAA,aAAK;UAAAA,0DAAA,EAAQ;UAC/BA,4DAAA,iBAKC;UACkBA,oDAAA,yBAAiB;UAAAA,0DAAA,EAAS;UAC3CA,wDAAA,KAAA8L,oCAAA,qBAA6E;UAC/E9L,0DAAA,EAAS;UACTA,wDAAA,KAAA+L,iCAAA,iBAEM;UACR/L,0DAAA,EAAM;UAENA,4DAAA,kBAAgF;UAAAA,oDAAA,gBAAQ;UAAAA,0DAAA,EAAS;UAGnGA,4DAAA,eAAkB;UACiCA,oDAAA,gDAAmC;UAAAA,0DAAA,EAAS;;;;;;;;;UAhDzFA,wDAAA,cAAAwC,GAAA,CAAA8H,YAAA,CAA0B;UAO1BtK,uDAAA,GAAmG;UAAnGA,yDAAA,iBAAAiM,OAAA,GAAAzJ,GAAA,CAAA8H,YAAA,CAAA4B,GAAA,+BAAAD,OAAA,CAAAE,OAAA,OAAAF,OAAA,GAAAzJ,GAAA,CAAA8H,YAAA,CAAA4B,GAAA,+BAAAD,OAAA,CAAAG,OAAA,EAAmG;UAE/FpM,uDAAA,GAAoF;UAApFA,wDAAA,WAAAqM,OAAA,GAAA7J,GAAA,CAAA8H,YAAA,CAAA4B,GAAA,+BAAAG,OAAA,CAAAF,OAAA,OAAAE,OAAA,GAAA7J,GAAA,CAAA8H,YAAA,CAAA4B,GAAA,+BAAAG,OAAA,CAAAD,OAAA,EAAoF;UAYxFpM,uDAAA,GAAmG;UAAnGA,yDAAA,iBAAAsM,OAAA,GAAA9J,GAAA,CAAA8H,YAAA,CAAA4B,GAAA,+BAAAI,OAAA,CAAAH,OAAA,OAAAG,OAAA,GAAA9J,GAAA,CAAA8H,YAAA,CAAA4B,GAAA,+BAAAI,OAAA,CAAAF,OAAA,EAAmG;UAE/FpM,uDAAA,GAAoF;UAApFA,wDAAA,WAAAuM,OAAA,GAAA/J,GAAA,CAAA8H,YAAA,CAAA4B,GAAA,+BAAAK,OAAA,CAAAJ,OAAA,OAAAI,OAAA,GAAA/J,GAAA,CAAA8H,YAAA,CAAA4B,GAAA,+BAAAK,OAAA,CAAAH,OAAA,EAAoF;UAWxFpM,uDAAA,GAA2F;UAA3FA,yDAAA,iBAAAwM,OAAA,GAAAhK,GAAA,CAAA8H,YAAA,CAAA4B,GAAA,2BAAAM,OAAA,CAAAL,OAAA,OAAAK,OAAA,GAAAhK,GAAA,CAAA8H,YAAA,CAAA4B,GAAA,2BAAAM,OAAA,CAAAJ,OAAA,EAA2F;UAGlEpM,uDAAA,GAAQ;UAARA,wDAAA,YAAAwC,GAAA,CAAA6H,KAAA,CAAQ;UAE7BrK,uDAAA,GAA4E;UAA5EA,wDAAA,WAAAyM,OAAA,GAAAjK,GAAA,CAAA8H,YAAA,CAAA4B,GAAA,2BAAAO,OAAA,CAAAN,OAAA,OAAAM,OAAA,GAAAjK,GAAA,CAAA8H,YAAA,CAAA4B,GAAA,2BAAAO,OAAA,CAAAL,OAAA,EAA4E;UAKtCpM,uDAAA,GAAiC;UAAjCA,wDAAA,aAAAwC,GAAA,CAAA8H,YAAA,CAAA6B,OAAA,CAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;AC1C3C;AACW;;;AAM3C,MAAO/I,UAAU;EAGrBvC,YAAoBgM,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,8CAA8C;EAEzB;EAEvC;EACA3G,QAAQA,CAAA;IACN,OAAO,IAAI,CAAC0G,IAAI,CAACX,GAAG,CAAQ,GAAG,IAAI,CAACY,OAAO,QAAQ,EAAE;MAAEC,eAAe,EAAE;IAAI,CAAE,CAAC,CAAC5L,IAAI,CAClFyL,mDAAG,CAACpF,QAAQ,IAAIwF,KAAK,CAACC,OAAO,CAACzF,QAAQ,CAAC,GAAGA,QAAQ,GAAG,EAAE,CAAC,EACxDmF,0DAAU,CAACjF,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAOgF,wCAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CACH;EACH;EAEA;EACFhC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACmC,IAAI,CAACX,GAAG,CAAQ,GAAG,IAAI,CAACY,OAAO,QAAQ,CAAC,CAAC3L,IAAI,CACvDyL,mDAAG,CAACpF,QAAQ,IAAIwF,KAAK,CAACC,OAAO,CAACzF,QAAQ,CAAC,GAAGA,QAAQ,GAAG,EAAE,CAAC,EACxDmF,0DAAU,CAACjF,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAOgF,wCAAE,CAAC,EAAE,CAAC,CAAC,CAAE;IAClB,CAAC,CAAC,CACH;EACH;EAEA;EACAQ,aAAaA,CAAA;IACX,OAAO,IAAI,CAACL,IAAI,CAACX,GAAG,CAAQ,GAAG,IAAI,CAACY,OAAO,aAAa,EAAE;MAAEC,eAAe,EAAE;IAAI,CAAE,CAAC,CAAC5L,IAAI,CACvFwL,0DAAU,CAACjF,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,OAAOgF,wCAAE,CAAC,EAAE,CAAC,CAAC,CAAE;IAClB,CAAC,CAAC,CACH;EACH;EAEA;EACAS,YAAYA,CAACC,SAAc;IACzB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,GAAG,IAAI,CAACP,OAAO,aAAa,EAAEM,SAAS,EAAE;MAAEL,eAAe,EAAE;IAAI,CAAE,CAAC;EAChG;EAEA;EACAO,eAAeA,CAACC,WAAmB;IACjC,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAM,GAAG,IAAI,CAACV,OAAO,eAAeS,WAAW,EAAE,EAAE;MAAER,eAAe,EAAE;IAAI,CAAE,CAAC;EACtG;EAKEU,UAAUA,CAAC7H,IAAS;IAClB,OAAO,IAAI,CAACiH,IAAI,CAACQ,IAAI,CAAM,GAAG,IAAI,CAACP,OAAO,QAAQ,EAAElH,IAAI,EAAE;MAAEmH,eAAe,EAAE;IAAI,CAAE,CAAC;EACtF;EAEAW,UAAUA,CAAC7I,EAAU,EAAEe,IAAS;IAC9B,OAAO,IAAI,CAACiH,IAAI,CAACc,GAAG,CAAM,GAAG,IAAI,CAACb,OAAO,UAAUjI,EAAE,EAAE,EAAEe,IAAI,EAAE;MAAEmH,eAAe,EAAE;IAAI,CAAE,CAAC;EAC3F;EAEAnI,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACgI,IAAI,CAACW,MAAM,CAAM,GAAG,IAAI,CAACV,OAAO,UAAUjI,EAAE,EAAE,EAAE;MAAEkI,eAAe,EAAE;IAAI,CAAE,CAAC;EACxF;EAEA;EACA3G,UAAUA,CAAA;IACR,OAAO,IAAI,CAACyG,IAAI,CAACX,GAAG,CAAQ,GAAG,IAAI,CAACY,OAAO,UAAU,EAAE;MAAEC,eAAe,EAAE;IAAI,CAAE,CAAC,CAAC5L,IAAI,CACpFyL,mDAAG,CAACpF,QAAQ,IAAIwF,KAAK,CAACC,OAAO,CAACzF,QAAQ,CAAC,GAAGA,QAAQ,GAAG,EAAE,CAAC,EACxDmF,0DAAU,CAACjF,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAOgF,wCAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CACH;EACH;;EAEAnD,YAAYA,CAAChD,MAAW;IACtB,OAAO,IAAI,CAACsG,IAAI,CAACQ,IAAI,CAAM,GAAG,IAAI,CAACP,OAAO,UAAU,EAAEvG,MAAM,EAAE;MAAEwG,eAAe,EAAE;IAAI,CAAE,CAAC;EAC1F;EAEA1D,YAAYA,CAACxE,EAAU,EAAE0B,MAAW;IAClC,OAAO,IAAI,CAACsG,IAAI,CAACc,GAAG,CAAM,GAAG,IAAI,CAACb,OAAO,YAAYjI,EAAE,EAAE,EAAE0B,MAAM,EAAE;MAAEwG,eAAe,EAAE;IAAI,CAAE,CAAC;EAC/F;EAEAvH,YAAYA,CAACX,EAAU;IACrB,OAAO,IAAI,CAACgI,IAAI,CAACW,MAAM,CAAM,GAAG,IAAI,CAACV,OAAO,YAAYjI,EAAE,EAAE,EAAE;MAAEkI,eAAe,EAAE;IAAI,CAAE,CAAC;EAC1F;EAEAxB,YAAYA,CAACD,IAA4D;IACvE,OAAO,IAAI,CAACuB,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,OAAO,gBAAgB,EAAExB,IAAI,CAAC,CAACnK,IAAI,CAC7DwL,0DAAU,CAACjF,KAAK,IAAG;MACfC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAOgF,wCAAE,CAAChF,KAAK,CAACA,KAAK,CAAC,CAAC,CAAE;IAC7B,CAAC,CAAC,CACL;EACL;EAOE;EACAH,KAAKA,CAACH,QAAgB,EAAEC,QAAgB;IACtC,MAAMuG,IAAI,GAAG;MAAExG,QAAQ;MAAEC;IAAQ,CAAE;IACnC,OAAO,IAAI,CAACwF,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,OAAO,aAAa,EAAEc,IAAI,EAAE;MAAEb,eAAe,EAAE;IAAI,CAAE,CAAC;EACtF;EAEA;EACAc,MAAMA,CAAA;IACJ,OAAO,IAAI,CAAChB,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,OAAO,cAAc,EAAE,EAAE,EAAE;MAAEC,eAAe,EAAE;IAAI,CAAE,CAAC;EACrF;;;uBA5GW3J,UAAU,EAAApD,sDAAA,CAAA8B,4DAAA;IAAA;EAAA;;;aAAVsB,UAAU;MAAA4K,OAAA,EAAV5K,UAAU,CAAA6K,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;IEIRlO,4DAAA,iBAA2D;IAAAA,oDAAA,GAAqB;IAAAA,0DAAA,EAAS;;;;IAAlDA,wDAAA,UAAAmO,SAAA,CAAAtJ,EAAA,CAAmB;IAAC7E,uDAAA,GAAqB;IAArBA,+DAAA,CAAAmO,SAAA,CAAA/G,QAAA,CAAqB;;;;;;IAoCpFpH,4DAAA,SAAoC;IAC9BA,oDAAA,GAA0B;IAAAA,0DAAA,EAAK;IACnCA,4DAAA,SAAI;IAAAA,oDAAA,GAAgB;IAAAA,0DAAA,EAAK;IACzBA,4DAAA,SAAI;IAAAA,oDAAA,GAAkB;IAAAA,0DAAA,EAAK;IAC3BA,4DAAA,SAAI;IAAAA,oDAAA,GAAmB;IAAAA,0DAAA,EAAK;IAC5BA,4DAAA,SAAI;IACMA,wDAAA,mBAAAoO,4DAAA;MAAA,MAAAnK,WAAA,GAAAjE,2DAAA,CAAAmE,GAAA;MAAA,MAAAkK,OAAA,GAAApK,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAtE,2DAAA;MAAA,OAASA,yDAAA,CAAAsE,MAAA,CAAAgJ,eAAA,CAAAe,OAAA,CAAAxJ,EAAA,CAAwB;IAAA,EAAC;IAAwB7E,oDAAA,gBAAQ;IAAAA,0DAAA,EAAS;;;;IALjFA,uDAAA,GAA0B;IAA1BA,+DAAA,CAAAqO,OAAA,CAAA9H,MAAA,CAAAa,QAAA,CAA0B;IAC1BpH,uDAAA,GAAgB;IAAhBA,+DAAA,CAAAqO,OAAA,CAAAC,KAAA,CAAgB;IAChBtO,uDAAA,GAAkB;IAAlBA,+DAAA,CAAAqO,OAAA,CAAAE,OAAA,CAAkB;IAClBvO,uDAAA,GAAmB;IAAnBA,+DAAA,CAAAqO,OAAA,CAAAG,KAAA,CAAA3J,EAAA,CAAmB;;;AD1C3B,MAAOvB,mBAAmB;EAK9BzC,YAAoBgF,UAAsB,EAAUuE,EAAe;IAA/C,KAAAvE,UAAU,GAAVA,UAAU;IAAsB,KAAAuE,EAAE,GAAFA,EAAE;IAJtD,KAAAqE,UAAU,GAAU,EAAE;IACtB,KAAA1I,OAAO,GAAU,EAAE,CAAC,CAAE;IAIpB,IAAI,CAAC2I,cAAc,GAAG,IAAI,CAACtE,EAAE,CAACG,KAAK,CAAC;MAClCoE,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdL,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbK,OAAO,EAAE,CAAC,EAAE,CAAC,CAAE;KAChB,CAAC;EACJ;;EAEA5I,QAAQA,CAAA;IACN,IAAI,CAACI,UAAU,EAAE,CAAC,CAAE;IACpB,IAAI,CAAC8G,aAAa,EAAE,CAAC,CAAE;EACzB;EAEA;EACA9G,UAAUA,CAAA;IACR,IAAI,CAACP,UAAU,CAACO,UAAU,EAAE,CAAC/E,SAAS,CACnCsJ,IAAI,IAAI;MACP,IAAI,CAAC5E,OAAO,GAAG4E,IAAI;IACrB,CAAC,EACAjD,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CACF;EACH;EAEA;EACAwF,aAAaA,CAAA;IACX,IAAI,CAACrH,UAAU,CAACqH,aAAa,EAAE,CAAC7L,SAAS,CACtCsJ,IAAI,IAAI;MACP,IAAI,CAAC8D,UAAU,GAAG9D,IAAI;IACxB,CAAC,EACAjD,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,CACF;EACH;EAEA;EACAyF,YAAYA,CAAA;IACV,IAAI,IAAI,CAACuB,cAAc,CAACpG,KAAK,EAAE;MAC7B,MAAMuG,YAAY,GAAG,IAAI,CAACH,cAAc,CAAC1D,KAAK;MAC9C,IAAI,CAACnF,UAAU,CAACsH,YAAY,CAAC0B,YAAY,CAAC,CAACxN,SAAS,CACjDsJ,IAAI,IAAI;QACP,IAAI,CAAC8D,UAAU,CAACK,IAAI,CAACnE,IAAI,CAAC,CAAC,CAAE;QAC7B,IAAI,CAAC+D,cAAc,CAACK,KAAK,EAAE,CAAC,CAAE;MAChC,CAAC,EACArH,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D,CAAC,CACF;;EAEL;EAEA;EACA4F,eAAeA,CAACC,WAAmB;IACjC,IAAI,CAAC1H,UAAU,CAACyH,eAAe,CAACC,WAAW,CAAC,CAAClM,SAAS,CACpD,MAAK;MACH,IAAI,CAACoN,UAAU,GAAG,IAAI,CAACA,UAAU,CAAC1O,MAAM,CAACiP,IAAI,IAAIA,IAAI,CAACnK,EAAE,KAAK0I,WAAW,CAAC,CAAC,CAAE;IAC9E,CAAC,EACA7F,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D,CAAC,CACF;EACH;;;uBArEWpE,mBAAmB,EAAAtD,+DAAA,CAAA8B,6DAAA,GAAA9B,+DAAA,CAAAyG,uDAAA;IAAA;EAAA;;;YAAnBnD,mBAAmB;MAAArB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA4M,6BAAA1M,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCThCvC,4DAAA,aAAuB;UACfA,oDAAA,qCAAyB;UAAAA,0DAAA,EAAK;UAGlCA,4DAAA,aAAkB;UACZA,oDAAA,+BAAmB;UAAAA,0DAAA,EAAK;UAC5BA,4DAAA,cAA+D;UAA5BA,wDAAA,sBAAAkP,sDAAA;YAAA,OAAY1M,GAAA,CAAA2K,YAAA,EAAc;UAAA,EAAC;UAC5DnN,4DAAA,aAAwB;UACAA,oDAAA,eAAQ;UAAAA,0DAAA,EAAQ;UACtCA,4DAAA,iBAAsE;UACnDA,oDAAA,6BAAqB;UAAAA,0DAAA,EAAS;UAC/CA,wDAAA,KAAAmP,sCAAA,oBAAyF;UAC3FnP,0DAAA,EAAS;UAGXA,4DAAA,cAAwB;UACHA,oDAAA,cAAM;UAAAA,0DAAA,EAAQ;UACjCA,uDAAA,gBAA+E;UACjFA,0DAAA,EAAM;UAENA,4DAAA,cAAwB;UACDA,oDAAA,oBAAY;UAAAA,0DAAA,EAAQ;UACzCA,uDAAA,iBAAmF;UACrFA,0DAAA,EAAM;UAENA,4DAAA,cAAwB;UACDA,oDAAA,gBAAQ;UAAAA,0DAAA,EAAQ;UACrCA,uDAAA,iBAAmF;UACrFA,0DAAA,EAAM;UAENA,4DAAA,kBAA8C;UAAAA,oDAAA,gCAAmB;UAAAA,0DAAA,EAAS;UAK9EA,4DAAA,UAAI;UAAAA,oDAAA,sCAAyB;UAAAA,0DAAA,EAAK;UAClCA,4DAAA,iBAAqB;UAGXA,oDAAA,eAAO;UAAAA,0DAAA,EAAK;UAChBA,4DAAA,UAAI;UAAAA,oDAAA,aAAK;UAAAA,0DAAA,EAAK;UACdA,4DAAA,UAAI;UAAAA,oDAAA,mBAAW;UAAAA,0DAAA,EAAK;UACpBA,4DAAA,UAAI;UAAAA,oDAAA,eAAO;UAAAA,0DAAA,EAAK;UAChBA,4DAAA,UAAI;UAAAA,oDAAA,gBAAQ;UAAAA,0DAAA,EAAK;UAGrBA,4DAAA,aAAO;UACLA,wDAAA,KAAAoP,kCAAA,kBAQK;UACPpP,0DAAA,EAAQ;;;UAlDFA,uDAAA,GAA4B;UAA5BA,wDAAA,cAAAwC,GAAA,CAAAkM,cAAA,CAA4B;UAKD1O,uDAAA,GAAU;UAAVA,wDAAA,YAAAwC,GAAA,CAAAuD,OAAA,CAAU;UAoCpB/F,uDAAA,IAAa;UAAbA,wDAAA,YAAAwC,GAAA,CAAAiM,UAAA,CAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEjBlCzO,4DAAA,aAAyG;IACvGA,oDAAA,GACA;IAAAA,4DAAA,UAAK;IACoCA,wDAAA,mBAAAqP,2DAAA;MAAA,MAAApL,WAAA,GAAAjE,2DAAA,CAAAsP,GAAA;MAAA,MAAA/G,OAAA,GAAAtE,WAAA,CAAAI,SAAA;MAAA,MAAAkL,MAAA,GAAAvP,2DAAA;MAAA,OAASA,yDAAA,CAAAuP,MAAA,CAAAC,QAAA,CAAAjH,OAAA,CAAc;IAAA,EAAC;IAACvI,oDAAA,aAAM;IAAAA,0DAAA,EAAS;IAC/EA,4DAAA,iBAAoE;IAA9BA,wDAAA,mBAAAyP,2DAAA;MAAA,MAAAxL,WAAA,GAAAjE,2DAAA,CAAAsP,GAAA;MAAA,MAAA/G,OAAA,GAAAtE,WAAA,CAAAI,SAAA;MAAA,MAAAuE,MAAA,GAAA5I,2DAAA;MAAA,OAASA,yDAAA,CAAA4I,MAAA,CAAAhE,UAAA,CAAA2D,OAAA,CAAA1D,EAAA,CAAmB;IAAA,EAAC;IAAC7E,oDAAA,eAAQ;IAAAA,0DAAA,EAAS;;;;IAHvFA,uDAAA,GACA;IADAA,gEAAA,MAAAuI,OAAA,CAAAxD,IAAA,SAAAwD,OAAA,CAAAvD,KAAA,MACA;;;;;IALNhF,4DAAA,UAA8B;IACxBA,oDAAA,0BAAmB;IAAAA,0DAAA,EAAK;IAC5BA,4DAAA,aAAuB;IACrBA,wDAAA,IAAA0P,kCAAA,iBAMK;IACP1P,0DAAA,EAAK;;;;IAPkBA,uDAAA,GAAQ;IAARA,wDAAA,YAAAkH,MAAA,CAAApB,KAAA,CAAQ;;;;;IAUjC9F,4DAAA,cAA8D;IAC5DA,oDAAA,oCACF;IAAAA,0DAAA,EAAM;;;ADlCJ,MAAO+C,aAAa;EAKxBlC,YAAoBgF,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAJ9B,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAA6J,OAAO,GAAQ,EAAE;IACjB,KAAAC,YAAY,GAAQ,IAAI;EAEsB;EAE9C5J,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACJ,UAAU,CAACM,QAAQ,EAAE,CAAC9E,SAAS,CAACyE,KAAK,IAAG;MAC3C6B,OAAO,CAACiD,GAAG,CAAC,kBAAkB,EAAE9E,KAAK,CAAC,CAAC,CAAE;MACzC,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAsD,QAAQA,CAAA;IACN,IAAI,IAAI,CAACwG,YAAY,IAAI,IAAI,CAACA,YAAY,CAAC/K,EAAE,KAAKgL,SAAS,EAAE;MAC3D,IAAI,CAAChK,UAAU,CAAC6H,UAAU,CAAC,IAAI,CAACkC,YAAY,CAAC/K,EAAE,EAAE,IAAI,CAAC8K,OAAO,CAAC,CAACtO,SAAS,CAAC,MAAK;QAC5E,IAAI,CAAC4E,SAAS,EAAE;QAChB,IAAI,CAACqD,SAAS,EAAE;MAClB,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACzD,UAAU,CAAC4H,UAAU,CAAC,IAAI,CAACkC,OAAO,CAAC,CAACtO,SAAS,CAAC,MAAK;QACtD,IAAI,CAAC4E,SAAS,EAAE;QAChB,IAAI,CAACqD,SAAS,EAAE;MAClB,CAAC,CAAC;;EAEN;EAEAkG,QAAQA,CAAC5J,IAAS;IAChB,IAAIA,IAAI,CAACf,EAAE,KAAKgL,SAAS,EAAE;MAAE;MAC3B,IAAI,CAACD,YAAY,GAAGhK,IAAI;MACxB,IAAI,CAAC+J,OAAO,GAAG;QAAE,GAAG/J;MAAI,CAAE;;EAE9B;EAEAhB,UAAUA,CAACC,EAAsB;IAC/B,IAAIA,EAAE,KAAKgL,SAAS,EAAE;MAAE;MACtB,IAAI,CAAChK,UAAU,CAACjB,UAAU,CAACC,EAAE,CAAC,CAACxD,SAAS,CAAC,MAAK;QAC5C,IAAI,CAAC4E,SAAS,EAAE;MAClB,CAAC,CAAC;;EAEN;EAEAqD,SAASA,CAAA;IACP,IAAI,CAACqG,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,YAAY,GAAG,IAAI;EAC1B;;;uBAlDW7M,aAAa,EAAA/C,+DAAA,CAAA8B,6DAAA;IAAA;EAAA;;;YAAbiB,aAAa;MAAAd,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAyN,uBAAAvN,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCR1BvC,4DAAA,aAAuB;UACUA,oDAAA,8BAAkB;UAAAA,0DAAA,EAAK;UACpDA,4DAAA,aAAuB;UAEfA,oDAAA,8BAAuB;UAAAA,0DAAA,EAAK;UAElCA,4DAAA,aAAuB;UACfA,wDAAA,sBAAA+P,gDAAA;YAAA,OAAYvN,GAAA,CAAA4G,QAAA,EAAU;UAAA,EAAC;UAG3BpJ,4DAAA,cAAkB;UACsBA,oDAAA,kBAAU;UAAAA,0DAAA,EAAQ;UACxDA,4DAAA,gBAAqG;UAAlDA,wDAAA,2BAAAgQ,uDAAAhI,MAAA;YAAA,OAAAxF,GAAA,CAAAmN,OAAA,CAAA3K,KAAA,GAAAgD,MAAA;UAAA,EAA2B;UAA9EhI,0DAAA,EAAqG;UAGvGA,4DAAA,cAAkB;UACyBA,oDAAA,yBAAiB;UAAAA,0DAAA,EAAQ;UAClEA,4DAAA,iBAAsG;UAAhDA,wDAAA,2BAAAiQ,uDAAAjI,MAAA;YAAA,OAAAxF,GAAA,CAAAmN,OAAA,CAAA5K,IAAA,GAAAiD,MAAA;UAAA,EAA0B;UAAhFhI,0DAAA,EAAsG;UAKxGA,4DAAA,kBAAgF;UAAAA,oDAAA,eAAO;UAAAA,0DAAA,EAAS;UAKtGA,wDAAA,KAAAkQ,6BAAA,kBAWM;UAENlQ,wDAAA,KAAAmQ,6BAAA,kBAEM;UACRnQ,0DAAA,EAAM;;;;UA/BuDA,uDAAA,IAA2B;UAA3BA,wDAAA,YAAAwC,GAAA,CAAAmN,OAAA,CAAA3K,KAAA,CAA2B;UAKxBhF,uDAAA,GAA0B;UAA1BA,wDAAA,YAAAwC,GAAA,CAAAmN,OAAA,CAAA5K,IAAA,CAA0B;UAKpC/E,uDAAA,GAAiC;UAAjCA,wDAAA,cAAAoI,GAAA,CAAAC,IAAA,CAAAC,KAAA,CAAiC;UAK/EtI,uDAAA,GAAsB;UAAtBA,wDAAA,SAAAwC,GAAA,CAAAsD,KAAA,CAAAkB,MAAA,KAAsB;UAatBhH,uDAAA,GAAwB;UAAxBA,wDAAA,SAAAwC,GAAA,CAAAsD,KAAA,CAAAkB,MAAA,OAAwB;;;;;;;;;;;;;;;;;;;;;ACtCW;AAG7CoJ,sEAAA,EAAwB,CAACE,eAAe,CAAC/M,sDAAS,CAAC,CAChDgN,KAAK,CAACC,GAAG,IAAI7I,OAAO,CAACD,KAAK,CAAC8I,GAAG,CAAC,CAAC","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/player/player.component.ts","./src/app/player/player.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/api.service.ts","./src/app/statistics/statistics.component.ts","./src/app/statistics/statistics.component.html","./src/app/team/team.component.ts","./src/app/team/team.component.html","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tmpro-frontend';\n\n  showNavbar: boolean = true;\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe(() => {\n      const currentRoute = this.getCurrentRoute(this.activatedRoute);\n      this.showNavbar = !(currentRoute === 'login' || currentRoute === 'register');\n    });\n  }\n\n  private getCurrentRoute(route: ActivatedRoute): string {\n    if (route.firstChild) {\n      return this.getCurrentRoute(route.firstChild); // Recurse into child routes\n    }\n    return route.snapshot.url[0]?.path || '';  // Return the route path\n  }\n\n\n}\n","<div class=\"container-fluid\">\n  <!-- Barra de navegación -->\n  <nav *ngIf=\"showNavbar\" class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">TMPro</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"['/team']\">Equipos</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"['/player']\">Jugadores</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"['/statistics']\">Estadísticas</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n\n  <!-- Área principal de contenido -->\n  <div class=\"container mt-4\">\n    <router-outlet></router-outlet> <!-- Aquí se cargan los componentes dependiendo de la ruta -->\n  </div>\n\n  <!-- Pie de página -->\n  <footer class=\"bg-dark text-white text-center py-3 mt-4\">\n    <p>&copy; 2024 TMPro. Todos los derechos reservados.</p>\n  </footer>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';  // Asegúrate de importar FormsModule\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { TeamComponent } from './team/team.component';\nimport { PlayerComponent } from './player/player.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { ApiService } from './services/api.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { StatisticsComponent } from './statistics/statistics.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TeamComponent,\n    PlayerComponent,\n    DashboardComponent,\n    RegisterComponent,\n    LoginComponent,\n    StatisticsComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,  // Asegúrate de incluir FormsModule aquí\n    RouterModule.forRoot([\n      { path: 'dashboard', component: DashboardComponent },  // Ruta protegida\n      { path: 'team', component: TeamComponent},  // Ruta protegida\n      { path: 'player', component: PlayerComponent },  // Ruta protegida\n      { path: 'login', component: LoginComponent },  // Ruta para login\n      { path: 'register', component: RegisterComponent },  // Ruta para login\n      { path: '', redirectTo: '/login', pathMatch: 'full' }\n    ])\n  ],\n  providers: [ApiService],  \n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  teams: any[] = [];\n  players: any[] = [];\n\n  constructor(private apiService: ApiService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadTeams();\n    this.loadPlayers();\n  }\n\n  loadTeams(): void {\n    this.apiService.getTeams().subscribe(teams => {\n      this.teams = teams;\n    });\n  }\n\n  loadPlayers(): void {\n    this.apiService.getPlayers().subscribe(players => {\n      this.players = players;\n    });\n  }\n\n  goToEditTeam(team: any): void {\n    this.router.navigate(['/team', team.id]);\n  }\n\n  goToCreateTeam(): void {\n    this.router.navigate(['/team']);\n  }\n\n  goToEditPlayer(player: any): void {\n    this.router.navigate(['/player', player.id]);\n  }\n\n  goToCreatePlayer(): void {\n    this.router.navigate(['/player']);\n  }\n\n  deleteTeam(id: number): void {\n    this.apiService.deleteTeam(id).subscribe(() => {\n      this.loadTeams();\n    });\n  }\n\n  deletePlayer(id: number): void {\n    this.apiService.deletePlayer(id).subscribe(() => {\n      this.loadPlayers();\n    });\n  }\n}\n","<div class=\"container\">\n    <h2 class=\"text-center my-4\">Panel de Control - TMPro</h2>\n  \n    <!-- Resumen de Equipos -->\n    <div class=\"card mb-4\">\n      <div class=\"card-header\">\n        <h5>Equipos Registrados</h5>\n      </div>\n      <div class=\"card-body\">\n        <ul class=\"list-group\">\n          <li *ngFor=\"let team of teams\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n            {{ team.name }} - {{ team.coach }}\n            <div>\n              <button class=\"btn btn-warning btn-sm\" (click)=\"goToEditTeam(team)\">Editar</button>\n              <button class=\"btn btn-danger btn-sm\" (click)=\"deleteTeam(team.id)\">Eliminar</button>\n            </div>\n          </li>\n        </ul>\n        <button class=\"btn btn-success mt-3\" (click)=\"goToCreateTeam()\">Agregar Nuevo Equipo</button>\n      </div>\n    </div>\n  \n    <!-- Resumen de Jugadores -->\n    <div class=\"card mb-4\">\n      <div class=\"card-header\">\n        <h5>Jugadores Registrados</h5>\n      </div>\n      <div class=\"card-body\">\n        <ul class=\"list-group\">\n          <li *ngFor=\"let player of players\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n            {{ player.name }} - {{ player.position }} - {{ player.dorsal }} - {{ player.team.name }}\n            <div>\n              <button class=\"btn btn-warning btn-sm\" (click)=\"goToEditPlayer(player)\">Editar</button>\n              <button class=\"btn btn-danger btn-sm\" (click)=\"deletePlayer(player.id)\">Eliminar</button>\n            </div>\n          </li>\n        </ul>\n        <button class=\"btn btn-success mt-3\" (click)=\"goToCreatePlayer()\">Agregar Nuevo Jugador</button>\n      </div>\n    </div>\n  \n    <!-- Mensaje si no hay equipos o jugadores -->\n    <div *ngIf=\"!teams.length && !players.length\" class=\"alert alert-info mt-4\">\n      No hay equipos ni jugadores registrados. ¡Comienza creando algunos!\n    </div>\n  </div>\n  ","import { Component } from '@angular/core';\nimport { ApiService } from '../services/api.service';  // Ajusta la ruta si es necesario\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string = '';\n  password: string = '';\n  errorMessage: string = '';\n\n  constructor(private apiService: ApiService, private router: Router) {}\n\n  onLogin() {\n    this.apiService.login(this.username, this.password).subscribe(\n      (response: any) => {\n        if (response && response.success) {\n          // Redirigir al dashboard o a la página deseada después del login\n          this.router.navigate(['/dashboard']);  // Ajusta la ruta si es necesario\n        } else {\n          this.errorMessage = 'Credenciales incorrectas o error en la autenticación';\n        }\n      },\n      (error) => {\n        console.error('Error al intentar iniciar sesión:', error);\n        this.errorMessage = 'Ocurrió un error al intentar iniciar sesión. Intenta nuevamente más tarde.';\n      }\n    );\n  }\n   // Método para navegar a la página de registro\n   navigateToRegister() {\n    this.router.navigate(['/register']);  \n  }\n}\n","<div class=\"container mt-5\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-6\">\n      <div class=\"card\">\n        <div class=\"card-header text-center\">\n          <h4>Iniciar Sesión</h4>\n        </div>\n        <div class=\"card-body\">\n          <form (ngSubmit)=\"onLogin()\" #loginForm=\"ngForm\">\n            <div class=\"mb-3\">\n              <label for=\"username\" class=\"form-label\">Usuario</label>\n              <input\n                type=\"text\"\n                id=\"username\"\n                class=\"form-control\"\n                [(ngModel)]=\"username\"\n                name=\"username\"\n                required\n              />\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"password\" class=\"form-label\">Contraseña</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                class=\"form-control\"\n                [(ngModel)]=\"password\"\n                name=\"password\"\n                required\n              />\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary w-100\" [disabled]=\"!loginForm.form.valid\">\n              Iniciar Sesión\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary w-100 mt-3\"\n              (click)=\"navigateToRegister()\"\n            >\n              Registrarse\n            </button>\n          </form>\n\n          <!-- Mensaje de error -->\n          <div *ngIf=\"errorMessage\" class=\"alert alert-danger mt-3\">\n            {{ errorMessage }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.css']\n})\nexport class PlayerComponent implements OnInit {\n  players: any[] = [];\n  teams: any[] = [];\n  newPlayer: any = {};\n  selectedPlayer: any = null;\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.loadPlayers();\n    this.loadTeams();\n  }\n\n  loadPlayers(): void {\n    this.apiService.getPlayers().subscribe(players => {\n      this.players = players;\n    });\n  }\n\n  loadTeams(): void {\n    this.apiService.getTeams().subscribe(teams => {\n      this.teams = teams;\n    });\n  }\n\n  onSubmit(): void {\n    if (this.selectedPlayer) {\n      this.apiService.updatePlayer(this.selectedPlayer.id, this.newPlayer).subscribe(() => {\n        this.loadPlayers();\n        this.clearForm();\n      });\n    } else {\n      this.apiService.createPlayer(this.newPlayer).subscribe(() => {\n        this.loadPlayers();\n        this.clearForm();\n      });\n    }\n  }\n\n  editPlayer(player: any): void {\n    this.selectedPlayer = player;\n    this.newPlayer = { ...player };\n  }\n\n  deletePlayer(id: number): void {\n    this.apiService.deletePlayer(id).subscribe(() => {\n      this.loadPlayers();\n    });\n  }\n\n  clearForm(): void {\n    this.newPlayer = {};\n    this.selectedPlayer = null;\n  }\n}\n","<div class=\"container\">\n    <h2 class=\"text-center my-4\">Gestión de Jugadores</h2>\n    <div class=\"card mb-4\">\n      <div class=\"card-header\">\n        <h5>Crear/Actualizar Jugador</h5>\n      </div>\n      <div class=\"card-body\">\n        <form (ngSubmit)=\"onSubmit()\" #playerForm=\"ngForm\">\n          <div class=\"mb-3\">\n            <label for=\"playerName\" class=\"form-label\">Nombre del Jugador</label>\n            <input type=\"text\" id=\"playerName\" class=\"form-control\" [(ngModel)]=\"newPlayer.name\" name=\"name\" required>\n          </div>\n  \n          <div class=\"mb-3\">\n            <label for=\"position\" class=\"form-label\">Posición</label>\n            <input type=\"text\" id=\"position\" class=\"form-control\" [(ngModel)]=\"newPlayer.position\" name=\"position\" required>\n          </div>\n  \n          <div class=\"mb-3\">\n            <label for=\"dorsal\" class=\"form-label\">Dorsal</label>\n            <input type=\"text\" id=\"dorsal\" class=\"form-control\" [(ngModel)]=\"newPlayer.dorsal\" name=\"dorsal\" required>\n          </div>\n  \n          <div class=\"mb-3\">\n            <label for=\"team\" class=\"form-label\">Equipo</label>\n            <select id=\"team\" class=\"form-control\" [(ngModel)]=\"newPlayer.team_id\" name=\"team_id\" required>\n              <option *ngFor=\"let team of teams\" [value]=\"team.id\">{{ team.name }}</option>\n            </select>\n          </div>\n  \n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!playerForm.form.valid\">Guardar</button>\n        </form>\n      </div>\n    </div>\n  \n    <div *ngIf=\"players.length > 0\">\n      <h3>Jugadores Registrados</h3>\n      <ul class=\"list-group\">\n        <li *ngFor=\"let player of players\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n          {{ player.name }} - {{ player.position }} - {{ player.dorsal }} - {{ player.team.name }}\n          <div>\n            <button class=\"btn btn-warning btn-sm\" (click)=\"editPlayer(player)\">Editar</button>\n            <button class=\"btn btn-danger btn-sm\" (click)=\"deletePlayer(player.id)\">Eliminar</button>\n          </div>\n        </li>\n      </ul>\n    </div>\n  \n    <div *ngIf=\"players.length === 0\" class=\"alert alert-info mt-4\">\n      No hay jugadores registrados.\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ApiService } from '../services/api.service';\nimport { Router } from '@angular/router';  // Importar Router\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  roles: any[] = [];\n\n  constructor(private fb: FormBuilder, private apiService: ApiService,  private router: Router) {}\n\n  ngOnInit(): void {\n    this.registerForm = this.fb.group({\n      password: ['', [Validators.required]],\n      username: ['', [Validators.required]],\n      role: ['', [Validators.required]]  // Asegúrate de que el campo 'role' sea obligatorio\n    });\n\n    this.getRoles();  // Obtén los roles cuando se inicialice el componente\n  }\n\n  getRoles(): void {\n    this.apiService.getRoles().subscribe(\n      (data) => {\n        console.log('Roles obtenidos:', data);\n        this.roles = data;  // Asigna los roles a la propiedad 'roles'\n      },\n      (error) => {\n        console.error('Error al obtener roles:', error);\n      }\n    );\n  }\n\n  onRoleChange(event: any): void {\n    const selectedRoleId = event.target.value;\n    const selectedRole = this.roles.find(role => role.id == selectedRoleId);\n    \n    // Asegúrate de que se ha encontrado un rol válido\n    if (selectedRole) {\n      this.registerForm.patchValue({\n        role_id: selectedRole.id,  // Setear el role_id\n        role_name: selectedRole.name  // Setear el name si es necesario\n      });\n    }\n  }\n  \n\n  onSubmit(): void {\n    if (this.registerForm.valid) {\n      const user = this.registerForm.value;\n      console.log('Formulario válido. Registrando usuario:', user);\n  \n  \n      this.apiService.registerUser(user).subscribe(\n        (response) => {\n          console.log('Registro exitoso:', response);\n          // Realiza alguna acción después de un registro exitoso, como redirigir a otro lugar\n          this.router.navigate(['/login']);\n        },\n        (error) => {\n          console.error('Error al registrar usuario:', error);\n        }\n      );\n    } else {\n      console.error('Formulario inválido');\n    }\n  }\n  \n  }\n  \n  \n\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"username\">Username:</label>\n    <input\n      id=\"username\"\n      formControlName=\"username\"\n      class=\"form-control\"\n      [class.is-invalid]=\"registerForm.get('username')?.invalid && registerForm.get('username')?.touched\"\n    />\n    <div *ngIf=\"registerForm.get('username')?.invalid && registerForm.get('username')?.touched\" class=\"invalid-feedback\">\n      El nombre de usuario es obligatorio.\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"password\">Password:</label>\n    <input\n      id=\"password\"\n      type=\"password\"\n      formControlName=\"password\"\n      class=\"form-control\"\n      [class.is-invalid]=\"registerForm.get('password')?.invalid && registerForm.get('password')?.touched\"\n    />\n    <div *ngIf=\"registerForm.get('password')?.invalid && registerForm.get('password')?.touched\" class=\"invalid-feedback\">\n      La contraseña es obligatoria.\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"role\">Role:</label>\n    <select\n      id=\"role\"\n      formControlName=\"role\"\n      class=\"form-control\"\n      [class.is-invalid]=\"registerForm.get('role')?.invalid && registerForm.get('role')?.touched\"\n    >\n      <option value=\"\">Seleccione un rol</option>\n      <option *ngFor=\"let role of roles\" [value]=\"role.id\">{{ role.name }}</option>\n    </select>\n    <div *ngIf=\"registerForm.get('role')?.invalid && registerForm.get('role')?.touched\" class=\"invalid-feedback\">\n      Debes seleccionar un rol.\n    </div>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"registerForm.invalid\">Register</button>\n\n  <!-- Botón para navegar al login -->\n<div class=\"mt-3\">\n  <button class=\"btn btn-link\" routerLink=\"/login\">Ya tienes una cuenta? Inicia sesión</button>\n</div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private baseUrl = 'https://tmpro-5265168c0988.herokuapp.com/api';\n\n  constructor(private http: HttpClient) {}\n\n  // ** Equipos **\n  getTeams(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseUrl}/teams`, { withCredentials: true }).pipe(\n      map(response => Array.isArray(response) ? response : []),\n      catchError(error => {\n        console.error('Error al obtener equipos:', error);\n        return of([]); // Retorna un array vacío en caso de error\n      })\n    );\n  }\n\n  // ** Roles **\ngetRoles(): Observable<any[]> {\n  return this.http.get<any[]>(`${this.baseUrl}/roles`).pipe(\n    map(response => Array.isArray(response) ? response : []),\n    catchError(error => {\n      console.error('Error al obtener roles:', error);\n      return of([]);  // Retorna un array vacío en caso de error\n    })\n  );\n}\n\n// Obtener las estadísticas de los jugadores\ngetStatistics(): Observable<any[]> {\n  return this.http.get<any[]>(`${this.baseUrl}/statistics`, { withCredentials: true }).pipe(\n    catchError(error => {\n      console.error('Error al obtener estadísticas:', error);\n      return of([]);  // Retorna un array vacío en caso de error\n    })\n  );\n}\n\n// Agregar una nueva estadística\naddStatistic(statistic: any): Observable<any> {\n  return this.http.post<any>(`${this.baseUrl}/statistics`, statistic, { withCredentials: true });\n}\n\n// Eliminar una estadística\ndeleteStatistic(statisticId: number): Observable<any> {\n  return this.http.delete<any>(`${this.baseUrl}/statistics/${statisticId}`, { withCredentials: true });\n}\n\n\n\n\n  createTeam(team: any): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/teams`, team, { withCredentials: true });\n  }\n\n  updateTeam(id: number, team: any): Observable<any> {\n    return this.http.put<any>(`${this.baseUrl}/teams/${id}`, team, { withCredentials: true });\n  }\n\n  deleteTeam(id: number): Observable<any> {\n    return this.http.delete<any>(`${this.baseUrl}/teams/${id}`, { withCredentials: true });\n  }\n\n  // ** Jugadores **\n  getPlayers(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseUrl}/players`, { withCredentials: true }).pipe(\n      map(response => Array.isArray(response) ? response : []),\n      catchError(error => {\n        console.error('Error al obtener jugadores:', error);\n        return of([]); // Retorna un array vacío en caso de error\n      })\n    );\n  }\n\n  createPlayer(player: any): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/players`, player, { withCredentials: true });\n  }\n\n  updatePlayer(id: number, player: any): Observable<any> {\n    return this.http.put<any>(`${this.baseUrl}/players/${id}`, player, { withCredentials: true });\n  }\n\n  deletePlayer(id: number): Observable<any> {\n    return this.http.delete<any>(`${this.baseUrl}/players/${id}`, { withCredentials: true });\n  }\n\n  registerUser(user: { username: string; password: string; roleId: number }): Observable<any> {\n    return this.http.post(`${this.baseUrl}/auth/register`, user).pipe(\n        catchError(error => {\n            console.error('Error al registrar usuario:', error);\n            return of(error.error);  // Manejo de errores\n        })\n    );\n}\n\n  \n\n\n\n\n  // ** Login (sin JWT) ** \n  login(username: string, password: string): Observable<any> {\n    const body = { username, password };\n    return this.http.post(`${this.baseUrl}/auth/login`, body, { withCredentials: true });\n  }\n\n  // ** Logout **\n  logout(): Observable<any> {\n    return this.http.post(`${this.baseUrl}/auth/logout`, {}, { withCredentials: true });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';  // Asegúrate de importar tu servicio\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.css']\n})\nexport class StatisticsComponent implements OnInit {\n  statistics: any[] = [];\n  players: any[] = [];  // Para obtener los jugadores\n  statisticsForm: FormGroup;\n\n  constructor(private apiService: ApiService, private fb: FormBuilder) {\n    this.statisticsForm = this.fb.group({\n      playerId: [''],  // Campo para seleccionar un jugador\n      goals: [''],  // Campo para las estadísticas de goles\n      assists: [''],  // Campo para las asistencias\n      matchId: ['']  // Campo para seleccionar el partido\n    });\n  }\n\n  ngOnInit(): void {\n    this.getPlayers();  // Obtener jugadores para asociarlos con estadísticas\n    this.getStatistics();  // Obtener estadísticas de jugadores\n  }\n\n  // Obtener los jugadores\n  getPlayers(): void {\n    this.apiService.getPlayers().subscribe(\n      (data) => {\n        this.players = data;\n      },\n      (error) => {\n        console.error('Error al obtener jugadores:', error);\n      }\n    );\n  }\n\n  // Obtener las estadísticas de los jugadores\n  getStatistics(): void {\n    this.apiService.getStatistics().subscribe(\n      (data) => {\n        this.statistics = data;\n      },\n      (error) => {\n        console.error('Error al obtener estadísticas:', error);\n      }\n    );\n  }\n\n  // Método para agregar una nueva estadística\n  addStatistic(): void {\n    if (this.statisticsForm.valid) {\n      const newStatistic = this.statisticsForm.value;\n      this.apiService.addStatistic(newStatistic).subscribe(\n        (data) => {\n          this.statistics.push(data);  // Agregar la nueva estadística a la lista\n          this.statisticsForm.reset();  // Limpiar el formulario\n        },\n        (error) => {\n          console.error('Error al agregar la estadística:', error);\n        }\n      );\n    }\n  }\n\n  // Método para eliminar una estadística\n  deleteStatistic(statisticId: number): void {\n    this.apiService.deleteStatistic(statisticId).subscribe(\n      () => {\n        this.statistics = this.statistics.filter(stat => stat.id !== statisticId);  // Eliminar la estadística de la lista\n      },\n      (error) => {\n        console.error('Error al eliminar la estadística:', error);\n      }\n    );\n  }\n}\n","<div class=\"container\">\n    <h2>Estadísticas de Jugadores</h2>\n  \n    <!-- Formulario para agregar estadísticas -->\n    <div class=\"mb-4\">\n      <h3>Agregar Estadística</h3>\n      <form [formGroup]=\"statisticsForm\" (ngSubmit)=\"addStatistic()\">\n        <div class=\"form-group\">\n          <label for=\"playerId\">Jugador:</label>\n          <select id=\"playerId\" formControlName=\"playerId\" class=\"form-control\">\n            <option value=\"\">Seleccione un Jugador</option>\n            <option *ngFor=\"let player of players\" [value]=\"player.id\">{{ player.username }}</option>\n          </select>\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"goals\">Goles:</label>\n          <input id=\"goals\" formControlName=\"goals\" type=\"number\" class=\"form-control\" />\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"assists\">Asistencias:</label>\n          <input id=\"assists\" formControlName=\"assists\" type=\"number\" class=\"form-control\" />\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"matchId\">Partido:</label>\n          <input id=\"matchId\" formControlName=\"matchId\" type=\"number\" class=\"form-control\" />\n        </div>\n  \n        <button type=\"submit\" class=\"btn btn-primary\">Agregar Estadística</button>\n      </form>\n    </div>\n  \n    <!-- Lista de estadísticas -->\n    <h3>Estadísticas de Jugadores</h3>\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>Jugador</th>\n          <th>Goles</th>\n          <th>Asistencias</th>\n          <th>Partido</th>\n          <th>Acciones</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let stat of statistics\">\n          <td>{{ stat.player.username }}</td>\n          <td>{{ stat.goals }}</td>\n          <td>{{ stat.assists }}</td>\n          <td>{{ stat.match.id }}</td>\n          <td>\n            <button (click)=\"deleteStatistic(stat.id)\" class=\"btn btn-danger\">Eliminar</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})\nexport class TeamComponent implements OnInit {\n  teams: any[] = [];\n  newTeam: any = {};\n  selectedTeam: any = null;\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.loadTeams();\n  }\n\n  loadTeams(): void {\n    this.apiService.getTeams().subscribe(teams => {\n      console.log('Roles obtenidos:', teams);  // Verifica qué datos devuelve la API\n      this.teams = teams;\n    });\n  }\n\n  onSubmit(): void {\n    if (this.selectedTeam && this.selectedTeam.id !== undefined) {\n      this.apiService.updateTeam(this.selectedTeam.id, this.newTeam).subscribe(() => {\n        this.loadTeams();\n        this.clearForm();\n      });\n    } else {\n      this.apiService.createTeam(this.newTeam).subscribe(() => {\n        this.loadTeams();\n        this.clearForm();\n      });\n    }\n  }\n\n  editTeam(team: any): void {\n    if (team.id !== undefined) { // Verificación de que el id existe\n      this.selectedTeam = team;\n      this.newTeam = { ...team };\n    }\n  }\n\n  deleteTeam(id: number | undefined): void {\n    if (id !== undefined) { // Verificación de que el id existe\n      this.apiService.deleteTeam(id).subscribe(() => {\n        this.loadTeams();\n      });\n    }\n  }\n\n  clearForm(): void {\n    this.newTeam = {};\n    this.selectedTeam = null;\n  }\n}\n","<div class=\"container\">\n    <h2 class=\"text-center my-4\">Gestión de Equipos</h2>\n    <div class=\"card mb-4\">\n      <div class=\"card-header\">\n        <h5>Crear/Actualizar Equipo</h5>\n      </div>\n      <div class=\"card-body\">\n        <form (ngSubmit)=\"onSubmit()\" #teamForm=\"ngForm\">\n\n\n          <div class=\"mb-3\">\n            <label for=\"coach\" class=\"form-label\">Entrenador</label>\n            <input type=\"text\" id=\"coach\" class=\"form-control\" [(ngModel)]=\"newTeam.coach\" name=\"coach\" required>\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"teamName\" class=\"form-label\">Nombre del Equipo</label>\n            <input type=\"text\" id=\"teamName\" class=\"form-control\" [(ngModel)]=\"newTeam.name\" name=\"name\" required>\n          </div>\n  \n          \n  \n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!teamForm.form.valid\">Guardar</button>\n        </form>\n      </div>\n    </div>\n  \n    <div *ngIf=\"teams.length > 0\">\n      <h3>Equipos Registrados</h3>\n      <ul class=\"list-group\">\n        <li *ngFor=\"let team of teams\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n          {{ team.name }} - {{ team.coach }}\n          <div>\n            <button class=\"btn btn-warning btn-sm\" (click)=\"editTeam(team)\">Editar</button>\n            <button class=\"btn btn-danger btn-sm\" (click)=\"deleteTeam(team.id)\">Eliminar</button>\n          </div>\n        </li>\n      </ul>\n    </div>\n  \n    <div *ngIf=\"teams.length === 0\" class=\"alert alert-info mt-4\">\n      No hay equipos registrados.\n    </div>\n  </div>\n  ","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["NavigationEnd","filter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","_c1","_c2","_c3","AppComponent","constructor","router","activatedRoute","title","showNavbar","events","pipe","event","subscribe","currentRoute","getCurrentRoute","route","firstChild","snapshot","url","path","ɵɵdirectiveInject","i1","Router","ActivatedRoute","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_nav_1_Template","BrowserModule","HttpClientModule","FormsModule","RouterModule","TeamComponent","PlayerComponent","DashboardComponent","RegisterComponent","LoginComponent","ApiService","ReactiveFormsModule","StatisticsComponent","AppModule","bootstrap","imports","forRoot","component","redirectTo","pathMatch","declarations","ɵɵlistener","DashboardComponent_li_9_Template_button_click_3_listener","restoredCtx","ɵɵrestoreView","_r5","team_r3","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","goToEditTeam","DashboardComponent_li_9_Template_button_click_5_listener","ctx_r6","deleteTeam","id","ɵɵtextInterpolate2","name","coach","DashboardComponent_li_18_Template_button_click_3_listener","_r9","player_r7","ctx_r8","goToEditPlayer","DashboardComponent_li_18_Template_button_click_5_listener","ctx_r10","deletePlayer","ɵɵtextInterpolate4","position","dorsal","team","apiService","teams","players","ngOnInit","loadTeams","loadPlayers","getTeams","getPlayers","navigate","goToCreateTeam","player","goToCreatePlayer","i2","DashboardComponent_Template","DashboardComponent_li_9_Template","DashboardComponent_Template_button_click_10_listener","DashboardComponent_li_18_Template","DashboardComponent_Template_button_click_19_listener","DashboardComponent_div_21_Template","length","ɵɵtextInterpolate1","ctx_r1","errorMessage","username","password","onLogin","login","response","success","error","console","navigateToRegister","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_8_listener","LoginComponent_Template_input_ngModelChange_13_listener","$event","LoginComponent_Template_input_ngModelChange_17_listener","LoginComponent_Template_button_click_20_listener","LoginComponent_div_22_Template","_r0","form","valid","team_r4","ɵɵtextInterpolate","PlayerComponent_div_29_li_4_Template_button_click_3_listener","_r8","player_r6","ctx_r7","editPlayer","PlayerComponent_div_29_li_4_Template_button_click_5_listener","ctx_r9","PlayerComponent_div_29_li_4_Template","ctx_r2","newPlayer","selectedPlayer","onSubmit","updatePlayer","clearForm","createPlayer","PlayerComponent_Template","PlayerComponent_Template_form_ngSubmit_8_listener","PlayerComponent_Template_input_ngModelChange_13_listener","PlayerComponent_Template_input_ngModelChange_17_listener","PlayerComponent_Template_input_ngModelChange_21_listener","PlayerComponent_Template_select_ngModelChange_25_listener","team_id","PlayerComponent_option_26_Template","PlayerComponent_div_29_Template","PlayerComponent_div_30_Template","Validators","role_r4","fb","roles","registerForm","group","required","role","getRoles","data","log","onRoleChange","selectedRoleId","target","value","selectedRole","find","patchValue","role_id","role_name","user","registerUser","FormBuilder","i3","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_0_listener","RegisterComponent_div_5_Template","RegisterComponent_div_10_Template","RegisterComponent_option_17_Template","RegisterComponent_div_18_Template","ɵɵclassProp","tmp_1_0","get","invalid","touched","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","tmp_7_0","of","catchError","map","http","baseUrl","withCredentials","Array","isArray","getStatistics","addStatistic","statistic","post","deleteStatistic","statisticId","delete","createTeam","updateTeam","put","body","logout","ɵɵinject","HttpClient","factory","ɵfac","providedIn","player_r2","StatisticsComponent_tr_44_Template_button_click_10_listener","stat_r3","goals","assists","match","statistics","statisticsForm","playerId","matchId","newStatistic","push","reset","stat","StatisticsComponent_Template","StatisticsComponent_Template_form_ngSubmit_6_listener","StatisticsComponent_option_13_Template","StatisticsComponent_tr_44_Template","TeamComponent_div_20_li_4_Template_button_click_3_listener","_r6","ctx_r5","editTeam","TeamComponent_div_20_li_4_Template_button_click_5_listener","TeamComponent_div_20_li_4_Template","newTeam","selectedTeam","undefined","TeamComponent_Template","TeamComponent_Template_form_ngSubmit_8_listener","TeamComponent_Template_input_ngModelChange_13_listener","TeamComponent_Template_input_ngModelChange_17_listener","TeamComponent_div_20_Template","TeamComponent_div_21_Template","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}